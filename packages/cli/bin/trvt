#!/usr/bin/env node

'use strict';

import { Command } from 'commander';
const program = new Command();
import * as fs from 'fs';
import * as path from 'path';

import { fileURLToPath } from 'url';
// Get the file path of the current module
// @ts-expect-error
const __filename = fileURLToPath(import.meta.url);
// Resolve the directory name (equivalent to __dirname)
const __dirname = path.dirname(__filename);

const pkg = JSON.parse(
	fs.readFileSync(path.join(__dirname, '..', 'package.json'), 'utf8')
);

const rootDir = path.join(__dirname, '..', 'lib');
const cleanTokens = await import(`${rootDir}/cleanTokens.js`).then(m => m.default);
const generateTokens = await import(`${rootDir}/generateTokens.js`).then(m => m.default);

program
	.description('CLI to generate Trivet assets')
	.version(pkg.version)
	.usage('[command] [options]');

program
	.command('clean')
	.description('Remove generated tokens')
	.option('--buildPath [build]', 'TODO')
	.action(cleanTokens);

program
	.command('tokens')
	.description('Generates tokens')
	.option(
		'-l, --layer [layer]',
		'Wrap the generated custom property tokens in a CSS layer with the given layername.'
	)
	.option(
		'-b, --buildPath [build]',
		'Tokens are put in a folder "build". Here you can set an alternate path.'
	)
	.option(
		'-p, --sourcePath [source]',
		'Tokens retrieved from the folder "tokens". Here you can set an alternate folder path.'
	)
	.option(
		'-t, --themePath [theme]',
		'You can set an explicit path for you theme tokens. These will be composed on top of the source tokens.'
	)
	.option(
		'-s, --scope [scope]',
		'This is the design system prefix. This is used in the filename and in the token keys/properties.'
	)
	.option(
		'-f, --filename [filename]',
		'A filename is <scope>_tokens. You can pick a different suffix.'
	)
	.option(
		'-e, --exclude [exclude]',
		'Exclude properties that contain the given string'
	)
	.option(
		'-x, --extension [extension]',
		'Points to the name of the CSS property entension'
	)
	.option('-m, --minify [minify]', 'Minify the CSS')
	.action(generateTokens);

program.parse();
