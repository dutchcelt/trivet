@layer components.props {
	:host {
		--is-tabbed: ;
		--toggle-display: block;
		--container-display: block;
		--toggle-summary-active-canvas: var(
			--trvt-color-background-content,
			canvas
		);
		--toggle-summary-active-text: var(
			--trvt-color-typography-text,
			canvasText
		);
		--toggle-detail-active-canvas: var(
			--trvt-color-background-content,
			canvas
		);
		--toggle-border-color: var(--trvt-color-typography-text);
		--toggle-border-width: var(--trvt-stroke-medium);
	}
	.content {
		--tab-radius: var(--is-tabbed, 1ex);
	}
}
@layer components.selectors {
/*	:host {
		display: block;
		container: --toggles / inline-size;
	}
	.content {
		display: var(--container-display);
		grid-template-columns:
			repeat(calc(var(--numOfToggles) - 1), min-content)
			1fr;
		grid-template-rows: 2em max-content;
		gap: 0 var(--space-inline);
		justify-content: start;
		align-content: start;
		&::after {
			content: '';
			grid-column: var(--numOfToggles);
			grid-row: 1;
		}
	}*/
}
@layer components.modifiers {
	@container --toggles (min-width: 640px) {
		.content {
			--is-tabbed: initial;
			--container-display: grid;
			--toggle-display: grid;
			--trvt-color-background-surfaces: ;
			--toggle-container-width: 100cqw;
		}
	}
}
