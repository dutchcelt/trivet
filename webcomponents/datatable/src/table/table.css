@layer components.props {
	:host {
		--_table-writing-mode: horizontal-tb;
		--_table-scroll: unset;
		--_table-sticky-cell: unset;
		--_table-sticky-header: unset;

		--nested-grid-diplay: contents;
		--canvas: var(--trvt-color-background-content);
		--canvasText: var(--trvt-color-typography-text);
		--table-cell-width: 75ch;
	}
}
@layer components.modifiers {
	@supports (grid-template-columns: subgrid) {
		:host {
			--nested-grid-diplay: grid;
		}
	}
	@media (prefers-color-scheme: dark) {
		:host {
			--canvas: canvas;
			--canvasText: canvasText;
		}
	}
	@container test (max-width: 680px) {
		.scrollbox {
			--_table-scroll: scroll;
		}
		.table {
			--_table-writing-mode: vertical-lr;
			--_table-sticky-cell: sticky;
			--_table-sticky-header: sticky;
			--table-cell-width: 30ch;
		}
	}
}
@layer components.selectors {
	:host {
		display: block;
		width: 100%;
		container: test / inline-size;
		margin-block-start: var(
			--trvt-typography-whitespace-default-block-start,
			1rem
		);
		margin-block-end: var(
			--trvt-typography-whitespace-default-block-end,
			1rem
		);
	}
	.scrollbox {
		overflow-x: var(--_table-scroll);
		height: 100%;
	}

	.table {
		writing-mode: var(--_table-writing-mode);
		display: grid;
		grid-template-columns: repeat(
			var(--number-of-columns, var(--trvt-number-of-columns)),
			auto
		);
		grid-template-rows: repeat(
			var(--number-of-rows, var(--trvt-number-of-rows)),
			auto
		);
		border-top: var(--trvt-stroke-medium) solid var(--canvasText);
		border-right: var(--trvt-stroke-medium) solid var(--canvasText);
		background-color: var(--canvas);
		color: var(--canvasText);
	}
}
